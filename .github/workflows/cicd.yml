name: Build and Push Services
on:
  push:
    branches: [ develop ]
    paths:
      - 'apps/**'
      - 'libs/**'
      - 'docker/**'
      - '.github/**'
      - 'helm/**'

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      docker_image_tag: ${{ steps.set_vars.outputs.docker_image_tag }}
    strategy:
      matrix:
        service: [pxm]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Dependencies
        run: npm install

      - name: Docker Image Tag
        id: set_vars
        run: |
            DOCKER_IMAGE_TAG="develop-$(echo ${GITHUB_SHA} | cut -c1-7)"
            echo "DOCKER_IMAGE_TAG=$DOCKER_IMAGE_TAG" >> $GITHUB_ENV
            echo "::set-output name=docker_image_tag::$DOCKER_IMAGE_TAG"

      - name: Log in to GitHub Container Registry
        run: echo ${{ secrets.GHCR_PAT }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build and Push Service
        run: make build_and_push SERVICE=${{ matrix.service }} VERSION=$DOCKER_IMAGE_TAG


  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment: dev
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up kubectl
        uses: matootie/dokube@v1.4.0
        with:
          personalAccessToken: ${{ secrets.DIGITALOCEAN_TOKEN }}
          clusterName: ${{ secrets.CLUSTER_NAME }}

      - name: Create Docker registry secret
        run: |
          kubectl delete secret ghcr-creds --namespace=dev --ignore-not-found
          kubectl create secret docker-registry ghcr-creds \
          --docker-server=ghcr.io \
          --docker-username=${{ github.actor }} \
          --docker-password=${{ secrets.GHCR_PAT }} \
          --namespace=dev

      - name: Create Typesense API Key Secret
        run: |
          kubectl create secret generic typesense-api-key \
          --from-literal=TYPESENSE_API_KEY=${{ secrets.TYPESENSE_API_KEY }} \
          --namespace=dev --dry-run=client -o yaml | kubectl apply -f -

      - name: Install Helm
        uses: azure/setup-helm@v1
        with:
          version: '3.13.2'

      - name: Add Helm repository
        run: |
          helm repo add bitnami https://charts.bitnami.com/bitnami
          helm repo add codecentric https://codecentric.github.io/helm-charts
          helm repo update

      - name: Build Helm chart dependencies
        run: |
          helm dependency build ./helm

      - name: Deploy with Helm
        run: |
          helm upgrade --install marketplace-api ./helm -n dev --create-namespace  \
          --set global.imageTag=${{ needs.build.outputs.docker_image_tag }} \
          --set global.postgresql.dbUser=${{ secrets.DB_USER }} \
          --set global.persistence.dbPassword=${{ secrets.DB_PASSWORD }} \
          --set global.keycloak.user=${{ secrets.KEYCLOAK_ADMIN_USER  }} \
          --set global.keycloak.password=${{ secrets.KEYCLOAK_ADMIN_PASSWORD }}
